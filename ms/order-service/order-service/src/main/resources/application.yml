server:
  port: 8084

spring:
  application:
    name: order-service
  datasource:
    url: jdbc:postgresql://localhost:5432/otus
    schema: order
    username: user
    password: password
  jpa:
    database: postgresql
    database-platform: org.hibernate.dialect.PostgreSQLDialect
  kafka:
    bootstrap-servers: localhost:9092
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    consumer:
      group-id: order-group
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: "*"
  flyway:
    url: jdbc:postgresql://localhost:5432/otus
    user: user
    password: password
    locations:
      - classpath:db
    schemas:
      - order

cart:
  ttl-minutes: 60

db:
  url:
  username:
  password:

webclient:
  productService:
    url: "http://localhost:8082"
  inventoryService:
    url: "http://localhost:8083"

management:
  endpoints:
    web:
      exposure:
        include: prometheus, health, metrics
  metrics:
    enable:
      timed: true
    distribution:
      percentiles-histogram:
        "[http.server.requests]": true
    export:
      prometheus:
        enabled: true
    tags:
      application: ${spring.application.name}
  prometheus:
    metrics:
      export:
        enabled: true

logging:
  level:
    ru.otus: DEBUG